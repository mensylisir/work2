apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql-deployment
  namespace: backstage
spec:
  selector:
    matchLabels:
      app: postgresql
  replicas: 1
  template:
    metadata:
      name: postgresql
      labels:
        app: postgresql
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgresql-pvc
      containers:
        - name: postgresql
          image: 'harbor-dev.rdev.tech/rhel8/postgresql-12'
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRESQL_USER
              value: backstage
            - name: POSTGRESQL_PASSWORD
              value: backstage
            - name: POSTGRESQL_DATABASE
              value: 'hhh'
            - name: POSTGRES_INITDB_ARGS
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRESQL_ADMIN_PASSWORD
              value: "root123"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data/pgdata
              subPath: postgresql-db
          livenessProbe:
            exec:
              command:
                - sh
                - '-c'
                - exec pg_isready --host $POD_IP
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - sh
                - '-c'
                - exec pg_isready --host $POD_IP
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  revisionHistoryLimit: 2147483647
  progressDeadlineSeconds: 2147483647


